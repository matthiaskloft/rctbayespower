---
title: "Model Validation for Predefined Models in 'rctbayespower'"
author: 
 - name: Matthias Kloft
   orcid: 0000-0003-1845-6957
date: "`r Sys.Date()`"
format:
  html:
    toc: true
    number-sections: true
    theme: cosmo
    code-fold: true
    code-tools: true
    code-summary: "Show the code"
    fig-width: 7
    fig-height: 4.5
    embed-resources: true
execute:
  message: false
  warning: false
---

***

Setup:
```{r setup}
# Set CRAN mirror
options(repos = c(CRAN = "https://cloud.r-project.org/"))

# Check and install required packages
packages <- c("dplyr", "kableExtra")
install.packages(setdiff(packages, rownames(installed.packages())))
invisible(lapply(packages, require, character.only = TRUE))
library(rctbayespower)

# Set up number of cores and simulations for Monte Carlo estimates.
n_cores <- min(8, parallel::detectCores())
n_sims <- 500
```



# ANCOVA

## Model: Two-Arm ANCOVA with continuous outcome

$$ y_{ij} = \beta_0 + d \cdot \text{arm}_{ij} + 
\rho \cdot \text{covariate}_{ij} + \epsilon_{ij},\\
\epsilon_{ij} \sim \mathcal{N}(0,1)$$

where $i$ is the subject and $j$ is the arm (1 or 2).


## True Parameters

True effect size and covariate effect, and sample size range.
```{r}
#| code-fold: false
rho <- .3
d <- .5
sample_size <- seq(40, 260, 20)
```


## Monte Carlo Estimate with uninformative priors for ANCOVA

Set up model, design, and conditions for Monte Carlo power analysis.
```{r}
#| code-fold: false

# Create ANCOVA model with uninformative priors
model <- build_model_ancova_cont_2arms(
  b_arm_treat = d,
  b_covariate = rho,
  prior_treatment = brms::set_prior("normal(0, 1e3)", class = "b"),
  prior_covariate = brms::set_prior("normal(0, 1e3)", class = "b", coef = "covariate"),
  prior_intercept = brms::set_prior("constant(0)", class = "Intercept"),
  prior_sigma = brms::set_prior("normal(0, 2)", class = "sigma", lb = 0),
  link_sigma = "identity"
)

# Create design
design <- build_design(
  model = model,
  target_params = "b_arm2",
  n_interim_analyses = 0,
  thresholds_success = 0,
  thresholds_futility = 0,
  p_sig_success = 0.95,
  p_sig_futility = 0.5
)

# Create conditions
conditions <- build_conditions(
  design = design,
  condition_values = list(
    n_total = sample_size
  ),
  static_values = list())
```

Run the Monte Carlo power analysis.
```{r}
power <- rctbayespower::power_analysis(
  conditions = conditions,
  n_sims = n_sims,
  n_cores = n_cores,
  brms_args = list(
    chains = 4,
    iter = 1000,
    warmup = 250,
    init = .5
  ),
  verbose = TRUE
)
power_mc <- power@summarized_results$power_success
power_mcse <- power@summarized_results$power_success_se
power_ci_95 <- paste0("[", 
                      round(power_mc - 1.96 * power_mcse, 3), ", ", 
                      round(power_mc + 1.96 * power_mcse, 3), "]")

```


## Analytical Power Calculation for ANCOVA
```{r}
#| code-fold: false

power_analytic <- analytical_power_ancova_cont_2arms(
  n = sample_size,
  d = d,
  beta_cov = rho,
  sigma = 1,
  alpha = .05,method = "theory", 
  covariate_method = "expected",
  alternative = "greater"
)
```


## Comparison of Monte Carlo and Analytical Power
```{r}
dplyr::tibble(
  "N total" = sample_size,
  "MC estimate" = power_mc,
  "95% CI" = power_ci_95 ,
  "Analytical estimate" =  power_analytic
) |>
  dplyr::mutate(
    `MC estimate` = round(`MC estimate`, 3),
    `Analytical estimate` = round(`Analytical estimate`, 3),
    Difference = round(`MC estimate` - `Analytical estimate`, 3)
  ) |>
  dplyr::arrange(`N total`) |> 
  kableExtra::kable("html",align = c("c","c", "c", "c", "c"))
```



***



# Session Info

```{r session_info}
sessionInfo()
```
