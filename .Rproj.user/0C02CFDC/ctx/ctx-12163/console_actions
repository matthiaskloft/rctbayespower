{
    "type": [
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        2,
        3,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        2,
        3,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        2,
        2,
        2,
        0,
        0,
        1,
        2,
        2,
        0,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        2,
        0,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        2,
        3,
        2
    ],
    "data": [
        "+ ",
        "    power_meanfield$mean_effect_estimate,",
        "+ ",
        "    power_fullrank$mean_effect_estimate",
        "+ ",
        "  ),",
        "+ ",
        "  power_success = c(",
        "+ ",
        "    power_mcmc$power_success,",
        "+ ",
        "    power_meanfield$power_success,",
        "+ ",
        "    power_fullrank$power_success",
        "+ ",
        "  ),",
        "+ ",
        "  power_futility = c(",
        "+ ",
        "    power_mcmc$power_futility,",
        "+ ",
        "    power_meanfield$power_futility,",
        "+ ",
        "    power_fullrank$power_futility",
        "+ ",
        "  ),",
        "+ ",
        "  p_success = c(",
        "+ ",
        "    power_mcmc$mean_prob_success,",
        "+ ",
        "    power_meanfield$mean_prob_success,",
        "+ ",
        "    power_fullrank$mean_prob_success",
        "+ ",
        "  ),",
        "+ ",
        "  p_futility = c(",
        "+ ",
        "    power_mcmc$mean_prob_futility,",
        "+ ",
        "    power_meanfield$mean_prob_futility,",
        "+ ",
        "    power_fullrank$mean_prob_futility",
        "+ ",
        "  )",
        "+ ",
        ") |> ",
        "+ ",
        "  # pivot this table wider",
        "+ ",
        "  tidyr::pivot_longer(",
        "+ ",
        "    cols = c(\"power_success\", \"power_futility\", \"p_success\", \"p_futility\"),",
        "+ ",
        "    names_to = \"metric\",",
        "+ ",
        "    values_to = \"value\"",
        "+ ",
        "  )",
        "> ",
        "power_comparison",
        "\u001B[38;5;246m# A tibble: 12 × 5\u001B[39m\n   method    convergence mean_effect_estimate metric           value\n   \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m           \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m                \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m            \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m\n\u001B[38;5;250m 1\u001B[39m MCMC            1                    0.481 power_success  0.397  \n\u001B[38;5;250m 2\u001B[39m MCMC            1                    0.481 power_futility 0.006\u001B[4m6\u001B[24m\u001B[4m7\u001B[24m\n\u001B[38;5;250m 3\u001B[39m MCMC  ",
        "          1                    0.481 p_success      0.843  \n\u001B[38;5;250m 4\u001B[39m MCMC            1                    0.481 p_futility     0.042\u001B[4m2\u001B[24m \n\u001B[38;5;250m 5\u001B[39m Meanfield       0.977                0.524 power_success  0.498  \n\u001B[38;5;250m 6\u001B[39m Meanfield       0.977                0.524 power_futility 0.006\u001B[4m8\u001B[24m\u001B[4m3\u001B[24m\n\u001B[38;5;250m 7\u001B[39m Meanfield       0.977                0.524 p_success      0.869  \n\u001B[38;5;250m 8\u001B[39m Meanfield       0.977                0.524 p_futility     0.036\u001B[4",
        "m8\u001B[24m \n\u001B[38;5;250m 9\u001B[39m Fullrank        0.89                 0.503 power_success  0.438  \n\u001B[38;5;250m10\u001B[39m Fullrank        0.89                 0.503 power_futility 0.007\u001B[4m4\u001B[24m\u001B[4m9\u001B[24m\n\u001B[38;5;250m11\u001B[39m Fullrank        0.89                 0.503 p_success      0.846  \n\u001B[38;5;250m12\u001B[39m Fullrank        0.89                 0.503 p_futility     0.043\u001B[4m4\u001B[24m \n",
        "> ",
        "power_comparison <- data.frame(",
        "+ ",
        "  method = c(\"MCMC\", \"Meanfield\", \"Fullrank\"),",
        "+ ",
        "  convergence = c(",
        "+ ",
        "    power_mcmc$convergence,",
        "+ ",
        "    power_meanfield$convergence,",
        "+ ",
        "    power_fullrank$convergence",
        "+ ",
        "  ),",
        "+ ",
        "  mean_effect_estimate = c(",
        "+ ",
        "    power_mcmc$mean_effect_estimate,",
        "+ ",
        "    power_meanfield$mean_effect_estimate,",
        "+ ",
        "    power_fullrank$mean_effect_estimate",
        "+ ",
        "  ),",
        "+ ",
        "  power_success = c(",
        "+ ",
        "    power_mcmc$power_success,",
        "+ ",
        "    power_meanfield$power_success,",
        "+ ",
        "    power_fullrank$power_success",
        "+ ",
        "  ),",
        "+ ",
        "  power_futility = c(",
        "+ ",
        "    power_mcmc$power_futility,",
        "+ ",
        "    power_meanfield$power_futility,",
        "+ ",
        "    power_fullrank$power_futility",
        "+ ",
        "  ),",
        "+ ",
        "  p_success = c(",
        "+ ",
        "    power_mcmc$mean_prob_success,",
        "+ ",
        "    power_meanfield$mean_prob_success,",
        "+ ",
        "    power_fullrank$mean_prob_success",
        "+ ",
        "  ),",
        "+ ",
        "  p_futility = c(",
        "+ ",
        "    power_mcmc$mean_prob_futility,",
        "+ ",
        "    power_meanfield$mean_prob_futility,",
        "+ ",
        "    power_fullrank$mean_prob_futility",
        "+ ",
        "  )",
        "+ ",
        ") |> ",
        "+ ",
        "  # pivot this table wider",
        "+ ",
        "  tidyr::pivot_wider(",
        "+ ",
        "    cols = c(\"power_success\", \"power_futility\", \"p_success\", \"p_futility\"),",
        "+ ",
        "    names_to = \"metric\",",
        "+ ",
        "    values_to = \"value\"",
        "+ ",
        "  )",
        "\u001BG1;\u001B[1m\u001B[33mError\u001B[39m in `tidyr::pivot_wider()`:\u001B[22m\n\u001B[33m!\u001B[39m Can't select columns that don't exist.\n\u001B[31m✖\u001B[39m Column `name` doesn't exist.\n\u001B[90mRun `\u001B]8;;x-r-run:rlang::last_trace()\u0007rlang::last_trace()\u001B]8;;\u0007` to see where the error occurred.\u001B[39m\n\u001Bg",
        "> ",
        "power_comparison <- data.frame(",
        "+ ",
        "  method = c(\"MCMC\", \"Meanfield\", \"Fullrank\"),",
        "+ ",
        "  convergence = c(",
        "+ ",
        "    power_mcmc$convergence,",
        "+ ",
        "    power_meanfield$convergence,",
        "+ ",
        "    power_fullrank$convergence",
        "+ ",
        "  ),",
        "+ ",
        "  mean_effect_estimate = c(",
        "+ ",
        "    power_mcmc$mean_effect_estimate,",
        "+ ",
        "    power_meanfield$mean_effect_estimate,",
        "+ ",
        "    power_fullrank$mean_effect_estimate",
        "+ ",
        "  ),",
        "+ ",
        "  power_success = c(",
        "+ ",
        "    power_mcmc$power_success,",
        "+ ",
        "    power_meanfield$power_success,",
        "+ ",
        "    power_fullrank$power_success",
        "+ ",
        "  ),",
        "+ ",
        "  power_futility = c(",
        "+ ",
        "    power_mcmc$power_futility,",
        "+ ",
        "    power_meanfield$power_futility,",
        "+ ",
        "    power_fullrank$power_futility",
        "+ ",
        "  ),",
        "+ ",
        "  p_success = c(",
        "+ ",
        "    power_mcmc$mean_prob_success,",
        "+ ",
        "    power_meanfield$mean_prob_success,",
        "+ ",
        "    power_fullrank$mean_prob_success",
        "+ ",
        "  ),",
        "+ ",
        "  p_futility = c(",
        "+ ",
        "    power_mcmc$mean_prob_futility,",
        "+ ",
        "    power_meanfield$mean_prob_futility,",
        "+ ",
        "    power_fullrank$mean_prob_futility",
        "+ ",
        "  )",
        "+ ",
        ") |> ",
        "+ ",
        "  # pivot this table wider",
        "+ ",
        "  tidyr::pivot_wider(",
        "+ ",
        "    names_from = method,",
        "+ ",
        "    values_from = c(convergence, mean_effect_estimate, power_success, power_futility, p_success, p_futility)",
        "+ ",
        "  )",
        "> ",
        "power_comparison",
        "\u001B[38;5;246m# A tibble: 1 × 18\u001B[39m\n  convergence_MCMC convergence_Meanfield convergence_Fullrank mean_effect_estimate_MCMC\n             \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m                 \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m                \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m                     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m\n\u001B[38;5;250m1\u001B[39m                1                 0.977                 0.89                     0.481\n\u001B[38;5;246m# ℹ 14 more variables: mean_effect_estimate_Meanfield <dbl>,\u001B[39m\n\u001B[38;5;246m#   me",
        "an_effect_estimate_Fullrank <dbl>, power_success_MCMC <dbl>,\u001B[39m\n\u001B[38;5;246m#   power_success_Meanfield <dbl>, power_success_Fullrank <dbl>, power_futility_MCMC <dbl>,\u001B[39m\n\u001B[38;5;246m#   power_futility_Meanfield <dbl>, power_futility_Fullrank <dbl>, p_success_MCMC <dbl>,\u001B[39m\n\u001B[38;5;246m#   p_success_Meanfield <dbl>, p_success_Fullrank <dbl>, p_futility_MCMC <dbl>,\u001B[39m\n\u001B[38;5;246m#   p_futility_Meanfield <dbl>, p_futility_Fullrank <dbl>\u001B[39m\n",
        "> ",
        "power_comparison <- data.frame(",
        "+ ",
        "  method = c(\"MCMC\", \"Meanfield\", \"Fullrank\"),",
        "+ ",
        "  convergence = c(",
        "+ ",
        "    power_mcmc$convergence,",
        "+ ",
        "    power_meanfield$convergence,",
        "+ ",
        "    power_fullrank$convergence",
        "+ ",
        "  ),",
        "+ ",
        "  mean_effect_estimate = c(",
        "+ ",
        "    power_mcmc$mean_effect_estimate,",
        "+ ",
        "    power_meanfield$mean_effect_estimate,",
        "+ ",
        "    power_fullrank$mean_effect_estimate",
        "+ ",
        "  ),",
        "+ ",
        "  power_success = c(",
        "+ ",
        "    power_mcmc$power_success,",
        "+ ",
        "    power_meanfield$power_success,",
        "+ ",
        "    power_fullrank$power_success",
        "+ ",
        "  ),",
        "+ ",
        "  power_futility = c(",
        "+ ",
        "    power_mcmc$power_futility,",
        "+ ",
        "    power_meanfield$power_futility,",
        "+ ",
        "    power_fullrank$power_futility",
        "+ ",
        "  ),",
        "+ ",
        "  p_success = c(",
        "+ ",
        "    power_mcmc$mean_prob_success,",
        "+ ",
        "    power_meanfield$mean_prob_success,",
        "+ ",
        "    power_fullrank$mean_prob_success",
        "+ ",
        "  ),",
        "+ ",
        "  p_futility = c(",
        "+ ",
        "    power_mcmc$mean_prob_futility,",
        "+ ",
        "    power_meanfield$mean_prob_futility,",
        "+ ",
        "    power_fullrank$mean_prob_futility",
        "+ ",
        "  )",
        "+ ",
        ") |> ",
        "+ ",
        "  # pivot this table wider",
        "+ ",
        "  tidyr::pivot_wider(id_cols = method,",
        "+ ",
        "                     ",
        "+ ",
        "    values_from = c(convergence, mean_effect_estimate, power_success, power_futility, p_success, p_futility)",
        "+ ",
        "  )",
        "\u001BG1;\u001B[1m\u001B[33mError\u001B[39m in `tidyr::pivot_wider()`:\u001B[22m\n\u001B[33m!\u001B[39m Can't select columns that don't exist.\n\u001B[31m✖\u001B[39m Column `name` doesn't exist.\n\u001B[90mRun `\u001B]8;;x-r-run:rlang::last_trace()\u0007rlang::last_trace()\u001B]8;;\u0007` to see where the error occurred.\u001B[39m\n\u001Bg",
        "> ",
        "power_comparison <- rbind(",
        "+ ",
        "  method = c(\"MCMC\", \"Meanfield\", \"Fullrank\"),",
        "+ ",
        "  convergence = c(",
        "+ ",
        "    power_mcmc$convergence,",
        "+ ",
        "    power_meanfield$convergence,",
        "+ ",
        "    power_fullrank$convergence",
        "+ ",
        "  ),",
        "+ ",
        "  mean_effect_estimate = c(",
        "+ ",
        "    power_mcmc$mean_effect_estimate,",
        "+ ",
        "    power_meanfield$mean_effect_estimate,",
        "+ ",
        "    power_fullrank$mean_effect_estimate",
        "+ ",
        "  ),",
        "+ ",
        "  power_success = c(",
        "+ ",
        "    power_mcmc$power_success,",
        "+ ",
        "    power_meanfield$power_success,",
        "+ ",
        "    power_fullrank$power_success",
        "+ ",
        "  ),",
        "+ ",
        "  power_futility = c(",
        "+ ",
        "    power_mcmc$power_futility,",
        "+ ",
        "    power_meanfield$power_futility,",
        "+ ",
        "    power_fullrank$power_futility",
        "+ ",
        "  ),",
        "+ ",
        "  p_success = c(",
        "+ ",
        "    power_mcmc$mean_prob_success,",
        "+ ",
        "    power_meanfield$mean_prob_success,",
        "+ ",
        "    power_fullrank$mean_prob_success",
        "+ ",
        "  ),",
        "+ ",
        "  p_futility = c(",
        "+ ",
        "    power_mcmc$mean_prob_futility,",
        "+ ",
        "    power_meanfield$mean_prob_futility,",
        "+ ",
        "    power_fullrank$mean_prob_futility",
        "+ ",
        "  )",
        "+ ",
        ")",
        "> ",
        "power_comparison",
        "                     [,1]                  [,2]                 [,3]                 \nmethod               \"MCMC\"                \"Meanfield\"          \"Fullrank\"           \nconvergence          \"1\"                   \"0.976666666666667\"  \"0.89\"               \nmean_effect_estimate \"0.481093480462853\"   \"0.524361563292482\"  \"0.503139951371127\"  \npower_success        \"0.396666666666667\"   \"0.498293515358362\"  \"0.438202247191011\"  \npower_futility       \"0.00666666666666667\" \"0.0068259385665529\" \"0.007490636704119",
        "85\"\np_success            \"0.843121666666667\"   \"0.86940204778157\"   \"0.846243445692884\"  \np_futility           \"0.0421666666666667\"  \"0.0368252559726962\" \"0.0433700374531835\" \n",
        "> ",
        "names(power_comparison) <- c(",
        "+ ",
        "  \"MCMC\",",
        "+ ",
        "  \"Meanfield\",",
        "+ ",
        "  \"Fullrank\"",
        "+ ",
        ")",
        "> ",
        "power_comparison",
        "                     [,1]                  [,2]                 [,3]                 \nmethod               \"MCMC\"                \"Meanfield\"          \"Fullrank\"           \nconvergence          \"1\"                   \"0.976666666666667\"  \"0.89\"               \nmean_effect_estimate \"0.481093480462853\"   \"0.524361563292482\"  \"0.503139951371127\"  \npower_success        \"0.396666666666667\"   \"0.498293515358362\"  \"0.438202247191011\"  \npower_futility       \"0.00666666666666667\" \"0.0068259385665529\" \"0.007490636704119",
        "85\"\np_success            \"0.843121666666667\"   \"0.86940204778157\"   \"0.846243445692884\"  \np_futility           \"0.0421666666666667\"  \"0.0368252559726962\" \"0.0433700374531835\" \nattr(,\"names\")\n [1] \"MCMC\"      \"Meanfield\" \"Fullrank\"  NA          NA          NA          NA         \n [8] NA          NA          NA          NA          NA          NA          NA         \n[15] NA          NA          NA          NA          NA          NA          NA         \n",
        "> ",
        "power_comparison <- rbind(",
        "+ ",
        "  convergence = c(",
        "+ ",
        "    power_mcmc$convergence,",
        "+ ",
        "    power_meanfield$convergence,",
        "+ ",
        "    power_fullrank$convergence",
        "+ ",
        "  ),",
        "+ ",
        "  mean_effect_estimate = c(",
        "+ ",
        "    power_mcmc$mean_effect_estimate,",
        "+ ",
        "    power_meanfield$mean_effect_estimate,",
        "+ ",
        "    power_fullrank$mean_effect_estimate",
        "+ ",
        "  ),",
        "+ ",
        "  power_success = c(",
        "+ ",
        "    power_mcmc$power_success,",
        "+ ",
        "    power_meanfield$power_success,",
        "+ ",
        "    power_fullrank$power_success",
        "+ ",
        "  ),",
        "+ ",
        "  power_futility = c(",
        "+ ",
        "    power_mcmc$power_futility,",
        "+ ",
        "    power_meanfield$power_futility,",
        "+ ",
        "    power_fullrank$power_futility",
        "+ ",
        "  ),",
        "+ ",
        "  p_success = c(",
        "+ ",
        "    power_mcmc$mean_prob_success,",
        "+ ",
        "    power_meanfield$mean_prob_success,",
        "+ ",
        "    power_fullrank$mean_prob_success",
        "+ ",
        "  ),",
        "+ ",
        "  p_futility = c(",
        "+ ",
        "    power_mcmc$mean_prob_futility,",
        "+ ",
        "    power_meanfield$mean_prob_futility,",
        "+ ",
        "    power_fullrank$mean_prob_futility",
        "+ ",
        "  )",
        "+ ",
        ") |>  as.data.frame()",
        "> ",
        "names(power_comparison) <- c(",
        "+ ",
        "  \"MCMC\",",
        "+ ",
        "  \"Meanfield\",",
        "+ ",
        "  \"Fullrank\"",
        "+ ",
        ")",
        "> ",
        "power_comparison",
        "                            MCMC   Meanfield    Fullrank\nconvergence          1.000000000 0.976666667 0.890000000\nmean_effect_estimate 0.481093480 0.524361563 0.503139951\npower_success        0.396666667 0.498293515 0.438202247\npower_futility       0.006666667 0.006825939 0.007490637\np_success            0.843121667 0.869402048 0.846243446\np_futility           0.042166667 0.036825256 0.043370037\n",
        "> ",
        "power_comparison <- rbind(",
        "+ ",
        "  convergence = c(",
        "+ ",
        "    power_mcmc$convergence,",
        "+ ",
        "    power_meanfield$convergence,",
        "+ ",
        "    power_fullrank$convergence",
        "+ ",
        "  ),",
        "+ ",
        "  mean_effect_estimate = c(",
        "+ ",
        "    power_mcmc$mean_effect_estimate,",
        "+ ",
        "    power_meanfield$mean_effect_estimate,",
        "+ ",
        "    power_fullrank$mean_effect_estimate",
        "+ ",
        "  ),",
        "+ ",
        "  power_success = c(",
        "+ ",
        "    power_mcmc$power_success,",
        "+ ",
        "    power_meanfield$power_success,",
        "+ ",
        "    power_fullrank$power_success",
        "+ ",
        "  ),",
        "+ ",
        "  power_futility = c(",
        "+ ",
        "    power_mcmc$power_futility,",
        "+ ",
        "    power_meanfield$power_futility,",
        "+ ",
        "    power_fullrank$power_futility",
        "+ ",
        "  ),",
        "+ ",
        "  p_success = c(",
        "+ ",
        "    power_mcmc$mean_prob_success,",
        "+ ",
        "    power_meanfield$mean_prob_success,",
        "+ ",
        "    power_fullrank$mean_prob_success",
        "+ ",
        "  ),",
        "+ ",
        "  p_futility = c(",
        "+ ",
        "    power_mcmc$mean_prob_futility,",
        "+ ",
        "    power_meanfield$mean_prob_futility,",
        "+ ",
        "    power_fullrank$mean_prob_futility",
        "+ ",
        "  )",
        "+ ",
        ") |>  as.data.frame() |> round(2)",
        "> ",
        "names(power_comparison) <- c(",
        "+ ",
        "  \"MCMC\",",
        "+ ",
        "  \"Meanfield\",",
        "+ ",
        "  \"Fullrank\"",
        "+ ",
        ")",
        "> ",
        "power_comparison",
        "                     MCMC Meanfield Fullrank\nconvergence          1.00      0.98     0.89\nmean_effect_estimate 0.48      0.52     0.50\npower_success        0.40      0.50     0.44\npower_futility       0.01      0.01     0.01\np_success            0.84      0.87     0.85\np_futility           0.04      0.04     0.04\n",
        "> ",
        "power_analysis_ANCOVA(",
        "+ ",
        "  n_control = 200,",
        "+ ",
        "  n_treatment = 200,",
        "+ ",
        "  effect_size = 0,",
        "+ ",
        "  baseline_effect = 0.2,",
        "+ ",
        "  threshold_success = 0.2,",
        "+ ",
        "  threshold_futility = .05,",
        "+ ",
        "  p_sig_futility = 0.5,",
        "+ ",
        "  outcome_type = \"continuous\",",
        "+ ",
        "  n_simulations = n_cores*20,",
        "+ ",
        "  n_cores = n_cores",
        "+ ",
        ")",
        "Running 300 power simulations in parallel using 15 cores...\nSetting up design model with true parameters...\n",
        "\u001BG3;Compiling Stan program...\n\u001Bg\u001BG1;Fehler in sink(type = \"output\") : ungültige Verbindung\n\u001Bg",
        "> ",
        "> ",
        "power_ancova <- ",
        "+ ",
        "power_analysis_ANCOVA(",
        "+ ",
        "  n_control = 200,",
        "+ ",
        "  n_treatment = 200,",
        "+ ",
        "  effect_size = 0,",
        "+ ",
        "  baseline_effect = 0.2,",
        "+ ",
        "  threshold_success = 0.2,",
        "+ ",
        "  threshold_futility = .05,",
        "+ ",
        "  p_sig_futility = 0.5,",
        "+ ",
        "  outcome_type = \"continuous\",",
        "+ ",
        "  n_simulations = n_cores*20,",
        "+ ",
        "  n_cores = n_cores",
        "+ ",
        ")",
        "Running 300 power simulations in parallel using 15 cores...\nSetting up design model with true parameters...\n",
        "\u001BG3;Compiling Stan program...\n\u001Bg\u001BG3;Start sampling\n\u001Bg",
        "Setting up design model with estimation priors...\n",
        "\u001BG3;Compiling Stan program...\n\u001Bg\u001BG3;Start sampling\n\u001Bg\u001BG3;No random effects in the design model.\n\u001Bg",
        "Running 300 simulations in parallel using 15 cores...\nProgress: 30/300 (10.0%) - Elapsed: 0.2 min - ETC: 2.0 min\nProgress: 60/300 (20.0%) - Elapsed: 0.3 min - ETC: 1.4 min\nProgress: 90/300 (30.0%) - Elapsed: 0.4 min - ETC: 1.0 min\nProgress: 120/300 (40.0%) - Elapsed: 0.5 min - ETC: 0.8 min\nProgress: 150/300 (50.0%) - Elapsed: 0.7 min - ETC: 0.7 min\nProgress: 180/300 (60.0%) - Elapsed: 0.8 min - ETC: 0.6 min\nProgress: 210/300 (70.0%) - Elapsed: 0.9 min - ETC: 0.4 min\nProgress: 240/300 (80.0%) - Elapsed: 1.0 ",
        "min - ETC: 0.3 min\nProgress: 270/300 (90.0%) - Elapsed: 1.2 min - ETC: 0.1 min\nCompleted: 300/300 (100%) - Total time: 1.3 min\n\nPower Analysis Complete!\nSuccessful fits: 300 out of 300 \nMean Effect Estimate (Mean): -0.009 \nMean Effect Estimate (Median): -0.009 \nSD of Effect Estimate (Mean): 0.093 \nSD of Effect Estimate (Median): 0.093 \nPower (Success): 0 \nPower (Futility): 0.703 \nMean probability above success threshold: 0.061 \nMean probability below futility threshold: 0.665 \n\n",
        "> ",
        "summary(power_ancova)",
        "\n=== Bayesian Power Analysis Summary ===\n\nStudy Design:\n  Control group size: 200 \n  Treatment group size: 200 \n  Target parameter: grouptreat \n  Success threshold: 0.2 \n  Futility threshold: 0.05 \n  Success probability threshold: 0.95 \n\nModel Information:\n  Family: gaussian(identity) \n  Estimation formula: baseline + group \n  Design formula: baseline + group \n\nSimulation Overview:\n  Total simulations: 300 \n  Successful fits: 300 \n  Convergence rate: 100 %\n\nTreatment Effect Estimates:\n  Mean effect estimate",
        " (mean): -0.009 \n  Mean effect  estimate (median): -0.009 \n  SD of effect estimates (mean): 0.093 \n  SD of effect estimates (median): 0.093 \n\nPower Analysis Results:\n  Power (Success): 0 \n  Power (Futility): 0.703 \n\nDecision Probabilities:\n  Mean probability above success threshold: 0.061 \n  Mean probability below futility threshold: 0.665 \n\n=== End Summary ===\n",
        "> ",
        "devtools::load_all(\".\")",
        "\u001B[38;5;255m\u001B[36mℹ\u001B[38;5;255m Loading \u001B[34mrctbayespower\u001B[38;5;255m\u001B[39m\n",
        "> ",
        "power_ancova <- ",
        "+ ",
        "power_analysis_ANCOVA(",
        "+ ",
        "  n_control = 500,",
        "+ ",
        "  n_treatment = 500,",
        "+ ",
        "  effect_size = 0,",
        "+ ",
        "  baseline_effect = 0.2,",
        "+ ",
        "  threshold_success = 0.3,",
        "+ ",
        "  threshold_futility = .05,",
        "+ ",
        "  p_sig_futility = 0.5,",
        "+ ",
        "  outcome_type = \"continuous\",",
        "+ ",
        "  n_simulations = n_cores*20,",
        "+ ",
        "  n_cores = n_cores",
        "+ ",
        ")",
        "Running 300 power simulations in parallel using 15 cores...\nSetting up design model with true parameters...\n",
        "\u001BG3;Compiling Stan program...\n\u001Bg\u001BG3;Start sampling\n\u001Bg",
        "Setting up design model with estimation priors...\n",
        "\u001BG3;Compiling Stan program...\n\u001Bg\u001BG3;Start sampling\n\u001Bg\u001BG3;No random effects in the design model.\n\u001Bg",
        "Running 300 simulations in parallel using 15 cores...\nProgress: 30/300 (10.0%) - Elapsed: 0.3 min - ETC: 2.3 min\nProgress: 60/300 (20.0%) - Elapsed: 0.4 min - ETC: 1.6 min\nProgress: 90/300 (30.0%) - Elapsed: 0.5 min - ETC: 1.3 min\nProgress: 120/300 (40.0%) - Elapsed: 0.7 min - ETC: 1.0 min\nProgress: 150/300 (50.0%) - Elapsed: 0.8 min - ETC: 0.8 min\nProgress: 180/300 (60.0%) - Elapsed: 0.9 min - ETC: 0.6 min\nProgress: 210/300 (70.0%) - Elapsed: 1.0 min - ETC: 0.4 min\nProgress: 240/300 (80.0%) - Elapsed: 1.2 ",
        "min - ETC: 0.3 min\nProgress: 270/300 (90.0%) - Elapsed: 1.4 min - ETC: 0.2 min\nCompleted: 300/300 (100%) - Total time: 1.5 min\n\nPower Analysis Complete!\nSuccessful fits: 300 out of 300 \nMean effect estimate (mean): -0.004 \nMean effect estimate (median): -0.005 \nSD of effect estimate (mean): 0.061 \nSD of effect estimate (median): 0.061 \nPower - Success: 0 \nPower - Futility: 0.803 \nMean probability of success: 0 \nMean probability of futility: 0.73 \n\n",
        "> ",
        "summary(power_ancova)",
        "\n=== Bayesian Power Analysis Summary ===\n\nStudy Design:\n  Control group size: 500 \n  Treatment group size: 500 \n  Target parameter: grouptreat \n  Success threshold: 0.3 \n  Futility threshold: 0.05 \n  Success probability threshold: 0.95 \n\n  Futility probability threshold: \n\nModel Information:\n  Family: gaussian(identity) \n  Estimation formula: baseline + group \n  Design formula: baseline + group \n\nSimulation Overview:\n  Total simulations: 300 \n  Successful fits: 300 \n  Convergence rate: 100 %\n\nTreatment Effe",
        "ct Estimates:\n  Mean effect estimate (mean): -0.004 \n  Mean effect estimate (median): -0.005 \n  SD of effect estimates (mean): 0.061 \n  SD of effect estimates (median): 0.061 \n\nPower Analysis Results:\n  Power - Success: 0 \n  Power - Futility: 0.803 \n\nDecision Probabilities:\n  Mean probability of success: 0 \n  Mean probability of futility: 0.73 \n\n=== End Summary ===\n",
        "> ",
        "devtools::load_all(\".\")",
        "\u001B[38;5;255m\u001B[36mℹ\u001B[38;5;255m Loading \u001B[34mrctbayespower\u001B[38;5;255m\u001B[39m\n",
        "> ",
        "n_cores <- parallel::detectCores() - 1  # use all but one core",
        "> ",
        "n_simulations <- n_cores * 10",
        "> ",
        "> ",
        "power_mcmc <-",
        "+ ",
        "  power_analysis(",
        "+ ",
        "    n_control = n_control,",
        "+ ",
        "    n_treatment = n_treatment,",
        "+ ",
        "    brms_design_true_params = val$brms_design_true_params,",
        "+ ",
        "    brms_design_estimation = val$brms_design_estimation,",
        "+ ",
        "    target_param = target_param,",
        "+ ",
        "    simulate_data_fn = simulate_data,",
        "+ ",
        "    threshold_success = threshold_success,",
        "+ ",
        "    threshold_futility = threshold_futility,",
        "+ ",
        "    p_sig_success = 0.95,",
        "+ ",
        "    p_sig_futility = 0.5,",
        "+ ",
        "    n_simulations = n_simulations,",
        "+ ",
        "    n_cores = n_cores,",
        "+ ",
        "    brms_args = list(",
        "+ ",
        "      algorithm = \"sampling\",",
        "+ ",
        "      iter = 1500,",
        "+ ",
        "      warmup = 500,",
        "+ ",
        "      chains = 2,",
        "+ ",
        "      cores = 1,",
        "+ ",
        "      init = .1,",
        "+ ",
        "      control = list(adapt_delta = 0.9)",
        "+ ",
        "    ),",
        "+ ",
        "  )",
        "Using pre-fitted design models...\nRunning 150 power simulations in parallel using 15 cores...\n",
        "\u001BG3;No random effects in the design model.\n\u001Bg",
        "Running 150 simulations in parallel using 15 cores...\nProgress: 15/150 (10.0%) - Elapsed: 0.2 min - ETC: 1.6 min\nProgress: 30/150 (20.0%) - Elapsed: 0.4 min - ETC: 1.5 min\nProgress: 45/150 (30.0%) - Elapsed: 0.5 min - ETC: 1.1 min\nProgress: 60/150 (40.0%) - Elapsed: 0.6 min - ETC: 0.8 min\nProgress: 75/150 (50.0%) - Elapsed: 0.7 min - ETC: 0.7 min\nProgress: 90/150 (60.0%) - Elapsed: 0.8 min - ETC: 0.5 min\nProgress: 105/150 (70.0%) - Elapsed: 1.0 min - ETC: 0.4 min\nProgress: 120/150 (80.0%) - Elapsed: 1.1 min",
        " - ETC: 0.3 min\nProgress: 135/150 (90.0%) - Elapsed: 1.2 min - ETC: 0.1 min\nCompleted: 150/150 (100%) - Total time: 1.3 min\n\nPower Analysis Complete!\nSuccessful fits: 150 out of 150 \nMean effect estimate (mean): 0.512 \nMean effect estimate (median): 0.512 \nSD of effect estimate (mean): 0.206 \nSD of effect estimate (median): 0.206 \nPower - Success: 0.427 \nPower - Futility: 0.007 \nMean probability of success: 0.863 \nMean probability of futility: 0.035 \n\n",
        "> ",
        "summary(power_mcmc)",
        "\n=== Bayesian Power Analysis Summary ===\n\nStudy Design:\n  Control group size: 50 \n  Treatment group size: 50 \n  Target parameter: grouptreat \n  Success threshold: 0.2 \n  Futility threshold: 0 \n  Success probability threshold: 0.95 \n\n  Futility probability threshold: \n\nModel Information:\n  Family: gaussian(identity) \n  Estimation formula: baseline + group \n  Design formula: baseline + group \n\nSimulation Overview:\n  Total simulations: 150 \n  Successful fits: 150 \n  Convergence rate: 100 %\n\nTreatment Effect Es",
        "timates:\n  Mean effect estimate (mean): 0.512 \n  Mean effect estimate (median): 0.512 \n  SD of effect estimates (mean): 0.206 \n  SD of effect estimates (median): 0.206 \n\nPower Analysis Results:\n  Power - Success: 0.427 \n  Power - Futility: 0.007 \n\nDecision Probabilities:\n  Mean probability of success: 0.863 \n  Mean probability of futility: 0.035 \n\n=== End Summary ===\n",
        "> ",
        "> ",
        "power_meanfield <-",
        "+ ",
        "  power_analysis(",
        "+ ",
        "    n_control = n_control,",
        "+ ",
        "    n_treatment = n_treatment,",
        "+ ",
        "    brms_design_true_params = val$brms_design_true_params,",
        "+ ",
        "    brms_design_estimation = val$brms_design_estimation,",
        "+ ",
        "    target_param = target_param,",
        "+ ",
        "    simulate_data_fn = simulate_data,",
        "+ ",
        "    threshold_success = threshold_success,",
        "+ ",
        "    threshold_futility = threshold_futility,",
        "+ ",
        "    p_sig_success = 0.95,",
        "+ ",
        "    p_sig_futility = 0.5,",
        "+ ",
        "    n_simulations = n_simulations,",
        "+ ",
        "    n_cores = n_cores,",
        "+ ",
        "    brms_args = list(",
        "+ ",
        "      algorithm = \"meanfield\",",
        "+ ",
        "      importance_resampling = TRUE,",
        "+ ",
        "      iter = 1e5,",
        "+ ",
        "      output_samples = 5e3",
        "+ ",
        "    )",
        "+ ",
        "  )",
        "Using pre-fitted design models...\nRunning 150 power simulations in parallel using 15 cores...\n",
        "\u001BG3;No random effects in the design model.\n\u001Bg",
        "Running 150 simulations in parallel using 15 cores...\nProgress: 15/150 (10.0%) - Elapsed: 0.2 min - ETC: 1.7 min\nProgress: 30/150 (20.0%) - Elapsed: 0.4 min - ETC: 1.4 min\nProgress: 45/150 (30.0%) - Elapsed: 0.5 min - ETC: 1.1 min\nProgress: 60/150 (40.0%) - Elapsed: 0.6 min - ETC: 0.8 min\nProgress: 75/150 (50.0%) - Elapsed: 0.7 min - ETC: 0.7 min\nProgress: 90/150 (60.0%) - Elapsed: 0.8 min - ETC: 0.5 min\nProgress: 105/150 (70.0%) - Elapsed: 0.9 min - ETC: 0.4 min\nProgress: 120/150 (80.0%) - Elapsed: 1.0 min",
        " - ETC: 0.2 min\nProgress: 135/150 (90.0%) - Elapsed: 1.1 min - ETC: 0.1 min\nCompleted: 150/150 (100%) - Total time: 1.2 min\n\nPower Analysis Complete!\nSuccessful fits: 144 out of 150 \nFailed simulations by type:\n   brms model fitting failures : 5 \n   brms fitting warnings (convergence/other issues) : 1 \nMean effect estimate (mean): 0.484 \nMean effect estimate (median): 0.485 \nSD of effect estimate (mean): 0.209 \nSD of effect estimate (median): 0.21 \nPower - Success: 0.403 \nPower - Futility: 0.007 \nMean proba",
        "bility of success: 0.839 \nMean probability of futility: 0.045 \n\n",
        "> ",
        "summary(power_meanfield)",
        "\n=== Bayesian Power Analysis Summary ===\n\nStudy Design:\n  Control group size: 50 \n  Treatment group size: 50 \n  Target parameter: grouptreat \n  Success threshold: 0.2 \n  Futility threshold: 0 \n  Success probability threshold: 0.95 \n\n  Futility probability threshold: \n\nModel Information:\n  Family: gaussian(identity) \n  Estimation formula: baseline + group \n  Design formula: baseline + group \n\nSimulation Overview:\n  Total simulations: 150 \n  Successful fits: 144 \n  Convergence rate: 96 %\n\nFailed Simulations: ",
        "6 \n  (See detailed error output from power_analysis() for failure breakdown)\n\nTreatment Effect Estimates:\n  Mean effect estimate (mean): 0.484 \n  Mean effect estimate (median): 0.485 \n  SD of effect estimates (mean): 0.209 \n  SD of effect estimates (median): 0.21 \n\nPower Analysis Results:\n  Power - Success: 0.403 \n  Power - Futility: 0.007 \n\nDecision Probabilities:\n  Mean probability of success: 0.839 \n  Mean probability of futility: 0.045 \n\n=== End Summary ===\n",
        "> ",
        "> ",
        "power_fullrank <-",
        "+ ",
        "  power_analysis(",
        "+ ",
        "    n_control = n_control,",
        "+ ",
        "    n_treatment = n_treatment,",
        "+ ",
        "    brms_design_true_params = val$brms_design_true_params,",
        "+ ",
        "    brms_design_estimation = val$brms_design_estimation,",
        "+ ",
        "    target_param = target_param,",
        "+ ",
        "    simulate_data_fn = simulate_data,",
        "+ ",
        "    threshold_success = threshold_success,",
        "+ ",
        "    threshold_futility = threshold_futility,",
        "+ ",
        "    p_sig_success = 0.95,",
        "+ ",
        "    p_sig_futility = 0.5,",
        "+ ",
        "    n_simulations = n_simulations,",
        "+ ",
        "    n_cores = n_cores,",
        "+ ",
        "    brms_args = list(",
        "+ ",
        "      algorithm = \"fullrank\",",
        "+ ",
        "      importance_resampling = TRUE,",
        "+ ",
        "      iter = 1e5,",
        "+ ",
        "      output_samples = 5e3",
        "+ ",
        "    )",
        "+ ",
        "  )",
        "Using pre-fitted design models...\nRunning 150 power simulations in parallel using 15 cores...\n",
        "\u001BG3;No random effects in the design model.\n\u001Bg",
        "Running 150 simulations in parallel using 15 cores...\nProgress: 15/150 (10.0%) - Elapsed: 0.2 min - ETC: 1.7 min\nProgress: 30/150 (20.0%) - Elapsed: 0.3 min - ETC: 1.4 min\nProgress: 45/150 (30.0%) - Elapsed: 0.4 min - ETC: 1.0 min\nProgress: 60/150 (40.0%) - Elapsed: 0.6 min - ETC: 0.8 min\nProgress: 75/150 (50.0%) - Elapsed: 0.7 min - ETC: 0.7 min\nProgress: 90/150 (60.0%) - Elapsed: 0.8 min - ETC: 0.5 min\nProgress: 105/150 (70.0%) - Elapsed: 0.9 min - ETC: 0.4 min\nProgress: 120/150 (80.0%) - Elapsed: 1.0 min",
        " - ETC: 0.3 min\nProgress: 135/150 (90.0%) - Elapsed: 1.1 min - ETC: 0.1 min\nCompleted: 150/150 (100%) - Total time: 1.2 min\n\nPower Analysis Complete!\nSuccessful fits: 128 out of 150 \nFailed simulations by type:\n   brms fitting warnings (convergence/other issues) : 22 \nMean effect estimate (mean): 0.488 \nMean effect estimate (median): 0.497 \nSD of effect estimate (mean): 0.21 \nSD of effect estimate (median): 0.21 \nPower - Success: 0.43 \nPower - Futility: 0 \nMean probability of success: 0.836 \nMean probabilit",
        "y of futility: 0.044 \n\n",
        "> ",
        "> ",
        "summary(power_fullrank)",
        "\n=== Bayesian Power Analysis Summary ===\n\nStudy Design:\n  Control group size: 50 \n  Treatment group size: 50 \n  Target parameter: grouptreat \n  Success threshold: 0.2 \n  Futility threshold: 0 \n  Success probability threshold: 0.95 \n\n  Futility probability threshold: \n\nModel Information:\n  Family: gaussian(identity) \n  Estimation formula: baseline + group \n  Design formula: baseline + group \n\nSimulation Overview:\n  Total simulations: 150 \n  Successful fits: 128 \n  Convergence rate: 85.3 %\n\nFailed Simulations",
        ": 22 \n  (See detailed error output from power_analysis() for failure breakdown)\n\nTreatment Effect Estimates:\n  Mean effect estimate (mean): 0.488 \n  Mean effect estimate (median): 0.497 \n  SD of effect estimates (mean): 0.21 \n  SD of effect estimates (median): 0.21 \n\nPower Analysis Results:\n  Power - Success: 0.43 \n  Power - Futility: 0 \n\nDecision Probabilities:\n  Mean probability of success: 0.836 \n  Mean probability of futility: 0.044 \n\n=== End Summary ===\n",
        "> ",
        "> ",
        "# Compare powers",
        "> ",
        "> ",
        "power_comparison <- rbind(",
        "+ ",
        "  convergence = c(",
        "+ ",
        "    power_mcmc$convergence,",
        "+ ",
        "    power_meanfield$convergence,",
        "+ ",
        "    power_fullrank$convergence",
        "+ ",
        "  ),",
        "+ ",
        "  mean_effect_estimate = c(",
        "+ ",
        "    power_mcmc$mean_effect_estimate,",
        "+ ",
        "    power_meanfield$mean_effect_estimate,",
        "+ ",
        "    power_fullrank$mean_effect_estimate",
        "+ ",
        "  ),",
        "+ ",
        "  power_success = c(",
        "+ ",
        "    power_mcmc$power_success,",
        "+ ",
        "    power_meanfield$power_success,",
        "+ ",
        "    power_fullrank$power_success",
        "+ ",
        "  ),",
        "+ ",
        "  power_futility = c(",
        "+ ",
        "    power_mcmc$power_futility,",
        "+ ",
        "    power_meanfield$power_futility,",
        "+ ",
        "    power_fullrank$power_futility",
        "+ ",
        "  ),",
        "+ ",
        "  p_success = c(",
        "+ ",
        "    power_mcmc$mean_prob_success,",
        "+ ",
        "    power_meanfield$mean_prob_success,",
        "+ ",
        "    power_fullrank$mean_prob_success",
        "+ ",
        "  ),",
        "+ ",
        "  p_futility = c(",
        "+ ",
        "    power_mcmc$mean_prob_futility,",
        "+ ",
        "    power_meanfield$mean_prob_futility,",
        "+ ",
        "    power_fullrank$mean_prob_futility",
        "+ ",
        "  )",
        "+ ",
        ") |>  as.data.frame() |> round(3)",
        "> ",
        "names(power_comparison) <- c(",
        "+ ",
        "  \"MCMC\",",
        "+ ",
        "  \"Meanfield\",",
        "+ ",
        "  \"Fullrank\"",
        "+ ",
        ")",
        "> ",
        "> ",
        "power_comparison",
        "                      MCMC Meanfield Fullrank\nconvergence          1.000     0.960    0.853\nmean_effect_estimate 0.512     0.484    0.488\npower_success        0.427     0.403    0.430\npower_futility       0.007     0.007    0.000\np_success            0.863     0.839    0.836\np_futility           0.035     0.045    0.044\n",
        "> ",
        "> ",
        "> ",
        "power_ancova <- ",
        "+ ",
        "power_analysis_ANCOVA(",
        "+ ",
        "  n_control = 500,",
        "+ ",
        "  n_treatment = 500,",
        "+ ",
        "  effect_size = 0,",
        "+ ",
        "  baseline_effect = 0.2,",
        "+ ",
        "  threshold_success = 0.3,",
        "+ ",
        "  threshold_futility = .05,",
        "+ ",
        "  p_sig_futility = 0.5,",
        "+ ",
        "  outcome_type = \"continuous\",",
        "+ ",
        "  n_simulations = n_cores*20,",
        "+ ",
        "  n_cores = n_cores",
        "+ ",
        ")",
        "Running 300 power simulations in parallel using 15 cores...\nSetting up design model with true parameters...\n",
        "\u001BG3;Compiling Stan program...\n\u001Bg\u001BG3;Start sampling\n\u001Bg",
        "Setting up design model with estimation priors...\n",
        "\u001BG3;Compiling Stan program...\n\u001Bg\u001BG1;Fehler in sink(type = \"output\") : ungültige Verbindung\n\u001Bg",
        "> ",
        "sample_size_analysis(",
        "+ ",
        "  power_analysis_fn = \"power_analysis_ANCOVA\",",
        "+ ",
        "  outcome_type = \"continuous\",n_simulations = n_cores * 20,n_cores = n_cores,",
        "+ ",
        "  effect_size = 0.5,",
        "+ ",
        "  baseline_effect = 0.2",
        "+ ",
        ")",
        "\\n=== Sample Size Analysis ===\\nTarget power: 0.8 \\nSample sizes to test: 20, 40, 60, 80, 100, 120, 140, 160, 180, 200 \\nAllocation ratio (treatment:control): 1 \\nPower analysis function: power_analysis_ANCOVA \\nEffect size: 0.5 \\nOutcome type: continuous \\n\\nTesting sample size: 20 per group\\n  ERROR: ",
        "\u001BG1;\u001BH1;Error\u001Bh in (function (n_control, n_treatment, outcome_type = \"continuous\", : Argument \"threshold_success\" fehlt (ohne Standardwert)\n \\nTesting sample size: 40 per group\\n\u001Bg\u001BG1;  ERROR: Error in (function (n_control, n_treatment, outcome_type = \"continuous\", : Argument \"threshold_success\" fehlt (ohne Standardwert)\n \\nTesting sample size: 60 per group\\n  ERROR: Error in (function (n_control, n_treatment, outcome_type = \"continuous\", : Argument \"threshold_success\" fehlt (ohne Standardwert)\n \\nTesting s",
        "ample size: 80 per group\\n  ERROR: Error in (function (n_control, n_treatment, outcome_type = \"continuous\", : Argument \"threshold_success\" fehlt (ohne Standardwert)\n \\nTesting sample size: 100 per group\\n\u001Bg\u001BG1;  ERROR: Error in (function (n_control, n_treatment, outcome_type = \"continuous\", : Argument \"threshold_success\" fehlt (ohne Standardwert)\n \\nTesting sample size: 120 per group\\n  ERROR: Error in (function (n_control, n_treatment, outcome_type = \"continuous\", : Argument \"threshold_success\" fehlt (ohne",
        " Standardwert)\n \\nTesting sample size: 140 per group\\n  ERROR: Error in (function (n_control, n_treatment, outcome_type = \"continuous\", : Argument \"threshold_success\" fehlt (ohne Standardwert)\n \\nTesting sample size: 160 per group\\n  ERROR: Error in (function (n_control, n_treatment, outcome_type = \"continuous\", : Argument \"threshold_success\" fehlt (ohne Standardwert)\n \\nTesting sample size: 180 per group\\n  ERROR: Error in (function (n_control, n_treatment, outcome_type = \"continuous\", : Argument \"threshol",
        "d_success\" fehlt (ohne Standardwert)\n \\nTesting sample size: 200 per group\\n  ERROR: Error in (function (n_control, n_treatment, outcome_type = \"continuous\", : Argument \"threshold_success\" fehlt (ohne Standardwert)\n \\n\\nTotal analysis time: 0 minutes\\n\u001Bg\u001BG1;Fehler in data.frame(n_per_group = x$n_per_group, n_total = x$n_total,  : \n  Argumente implizieren unterschiedliche Anzahl Zeilen: 0, 1\n\u001Bg",
        "> ",
        "sample_size_analysis(",
        "+ ",
        "  power_analysis_fn = \"power_analysis_ANCOVA\",",
        "+ ",
        "  outcome_type = \"continuous\",effect_size = 0,",
        "+ ",
        "  baseline_effect = 0.2,",
        "+ ",
        "  threshold_success = 0.3,",
        "+ ",
        "  threshold_futility = .05,",
        "+ ",
        "  p_sig_futility = 0.5,",
        "+ ",
        "  outcome_type = \"continuous\",",
        "+ ",
        "  n_simulations = n_cores * 20,",
        "+ ",
        "  n_cores = n_cores",
        "+ ",
        "  ",
        "+ ",
        ")",
        "\\n=== Sample Size Analysis ===\\nTarget power: 0.8 \\nSample sizes to test: 20, 40, 60, 80, 100, 120, 140, 160, 180, 200 \\nAllocation ratio (treatment:control): 1 \\nPower analysis function: power_analysis_ANCOVA \\nEffect size: 0 \\nOutcome type: continuous \\n\\nTesting sample size: 20 per group\\n  ERROR: ",
        "\u001BG1;\u001BH1;Error\u001Bh in (function (n_control, n_treatment, outcome_type = \"continuous\", : formales Argument \"outcome_type\" passt zu mehreren gegebenen Argumenten\n \\nTesting sample size: 40 per group\\n  ERROR: Error in (function (n_control, n_treatment, outcome_type = \"continuous\", : formales Argument \"outcome_type\" passt zu mehreren gegebenen Argumenten\n \\nTesting sample size: 60 per group\\n  ERROR: Error in (function (n_control, n_treatment, outcome_type = \"continuous\", : formales Argument \"outcome_type\" passt ",
        "zu mehreren gegebenen Argumenten\n \\nTesting sample size: 80 per group\\n  ERROR: Error in (function (n_control, n_treatment, outcome_type = \"continuous\", : formales Argument \"outcome_type\" passt zu mehreren gegebenen Argumenten\n \\nTesting sample size: 100 per group\\n\u001Bg\u001BG1;  ERROR: Error in (function (n_control, n_treatment, outcome_type = \"continuous\", : formales Argument \"outcome_type\" passt zu mehreren gegebenen Argumenten\n \\nTesting sample size: 120 per group\\n  ERROR: Error in (function (n_control, n_tre",
        "atment, outcome_type = \"continuous\", : formales Argument \"outcome_type\" passt zu mehreren gegebenen Argumenten\n \\nTesting sample size: 140 per group\\n  ERROR: Error in (function (n_control, n_treatment, outcome_type = \"continuous\", : formales Argument \"outcome_type\" passt zu mehreren gegebenen Argumenten\n \\nTesting sample size: 160 per group\\n\u001Bg\u001BG1;  ERROR: Error in (function (n_control, n_treatment, outcome_type = \"continuous\", : formales Argument \"outcome_type\" passt zu mehreren gegebenen Argumenten\n \\nTe",
        "sting sample size: 180 per group\\n  ERROR: Error in (function (n_control, n_treatment, outcome_type = \"continuous\", : formales Argument \"outcome_type\" passt zu mehreren gegebenen Argumenten\n \\nTesting sample size: 200 per group\\n  ERROR: Error in (function (n_control, n_treatment, outcome_type = \"continuous\", : formales Argument \"outcome_type\" passt zu mehreren gegebenen Argumenten\n \\n\\nTotal analysis time: 0 minutes\\n\u001Bg\u001BG1;Fehler in data.frame(n_per_group = x$n_per_group, n_total = x$n_total,  : \n  Argumen",
        "te implizieren unterschiedliche Anzahl Zeilen: 0, 1\n\u001Bg",
        "> ",
        "sample_size_analysis(",
        "+ ",
        "  power_analysis_fn = \"power_analysis_ANCOVA\",",
        "+ ",
        "  outcome_type = \"continuous\",",
        "+ ",
        "  effect_size = 0,",
        "+ ",
        "  baseline_effect = 0.2,",
        "+ ",
        "  threshold_success = 0.3,",
        "+ ",
        "  threshold_futility = .05,",
        "+ ",
        "  p_sig_futility = 0.5,",
        "+ ",
        "+ ",
        "  n_simulations = n_cores * 20,",
        "+ ",
        "  n_cores = n_cores",
        "+ ",
        "  ",
        "+ ",
        ")",
        "\\n=== Sample Size Analysis ===\\nTarget power: 0.8 \\nSample sizes to test: 20, 40, 60, 80, 100, 120, 140, 160, 180, 200 \\nAllocation ratio (treatment:control): 1 \\nPower analysis function: power_analysis_ANCOVA \\nEffect size: 0 \\nOutcome type: continuous \\n\\nTesting sample size: 20 per group\\nRunning 300 power simulations in parallel using 15 cores...\nSetting up design model with true parameters...\n",
        "\u001BG3;Compiling Stan program...\n\u001Bg",
        "  ERROR: ",
        "\u001BG1;\u001BH1;Error\u001Bh in sink(type = \"output\"): ungültige Verbindung\n \\nTesting sample size: 40 per group\\n\u001Bg\u001BG1;Running 300 power simulations in parallel using 15 cores...\nSetting up design model with true parameters...\n\u001Bg\u001BG1;\u001BG3;Compiling Stan program...\n\u001Bg\u001Bg\u001BG1;\u001BG3;Start sampling\n\u001Bg\u001Bg\u001BG1;Setting up design model with estimation priors...\n\u001Bg\u001BG1;\u001BG3;Compiling Stan program...\n\u001Bg\u001Bg",
        "\u001BG3;Restarting R session...\u001Bg"
    ]
}