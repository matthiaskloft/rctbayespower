% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/power_analysis_ancova.R
\name{power_analysis_ancova}
\alias{power_analysis_ancova}
\title{Power Analysis for ANCOVA Model (Multiple Outcome Types)}
\usage{
power_analysis_ancova(
  n_control,
  n_treatment,
  outcome_type = "continuous",
  effect_size,
  baseline_effect,
  intercept_value = 0,
  sigma_value = 1,
  threshold_success,
  threshold_futility,
  p_sig_success = 0.95,
  p_sig_futility = 0.5,
  n_simulations = 1000,
  priors_treatment = "student_t(3, 0, 2)",
  priors_baseline = "student_t(3, 0, 1)",
  priors_intercept = "student_t(3, 0, 2)",
  priors_sigma = "student_t(3, 0, 2)",
  brms_args = list(algorithm = "sampling", iter = 1500, warmup = 500, chains = 2, cores =
    1, init = 0.1, control = list(adapt_delta = 0.9)),
  seed = NULL,
  n_cores = parallel::detectCores() - 1,
  progress_updates = 10,
  compile_models_only = FALSE
)
}
\arguments{
\item{n_control}{Number of participants in control group}

\item{n_treatment}{Number of participants in treatment group}

\item{outcome_type}{Type of outcome ("continuous", "binary", "count")}

\item{effect_size}{True treatment effect (raw scale: continuous = raw difference, binary = log odds ratio, count = log rate ratio)}

\item{baseline_effect}{True baseline covariate effect (raw scale)}

\item{intercept_value}{True intercept value (raw scale)}

\item{sigma_value}{True residual standard deviation (for continuous outcomes only)}

\item{threshold_success}{Upper threshold for success determination}

\item{threshold_futility}{Lower threshold for futility determination (required)}

\item{p_sig_success}{Probability threshold for declaring success (default 0.95)}

\item{p_sig_futility}{Probability threshold for declaring futility (default 0.5)}

\item{n_simulations}{Number of simulation iterations}

\item{priors_treatment}{Prior for treatment effect (default: student_t(3, 0, 2))}

\item{priors_baseline}{Prior for baseline effect (default: student_t(3, 0, 1))}

\item{priors_intercept}{Prior for intercept (default: student_t(3, 0, 2))}

\item{priors_sigma}{Prior for residual SD (default: student_t(3, 0, 2), continuous only)}

\item{brms_args}{Arguments passed to brms for model fitting. If empty, uses power_analysis() defaults: algorithm="sampling", iter=1200, warmup=200, chains=2, cores=1. User can override any of these or add additional arguments.}

\item{seed}{Random seed for reproducibility}

\item{n_cores}{Number of cores for parallel processing. If n_cores > 1, simulations will run in parallel. Default is number of available cores minus 1.}

\item{progress_updates}{Number of progress updates to show during parallel processing. Default is 10. Set to 0 to disable progress updates.}

\item{compile_models_only}{If TRUE, only compile the brms models and return them without running simulations. Used for model caching in power_grid_analysis(). Default is FALSE.}
}
\value{
A list containing power analysis results, or if compile_models_only=TRUE, a list with compiled models and arguments for later use
}
\description{
Convenience wrapper for power analysis using the ANCOVA model with baseline covariate.
This function automates the setup for a standard randomized controlled trial with
a baseline covariate following the exact template workflow. Supports continuous,
binary, and count outcomes.
}
\examples{
\dontrun{
# Continuous outcome ANCOVA
power_result <- power_analysis_ancova(
  n_control = 50,
  n_treatment = 50,
  outcome_type = "continuous",
  effect_size = 0.5,
  baseline_effect = 0.2,
  threshold_success = 0.2,
  threshold_futility = 0,
  p_sig_success = 0.95,
  p_sig_futility = 0.8,
  n_simulations = 100
)

# Binary outcome ANCOVA
power_result <- power_analysis_ancova(
  n_control = 75,
  n_treatment = 75,
  outcome_type = "binary",
  effect_size = 0.693,  # log odds ratio for OR = 2
  baseline_effect = 0.405,  # log odds ratio for OR = 1.5
  intercept_value = 0,  # 50\% baseline probability
  p_sig_success = 0.95,
  p_sig_futility = 0.6,
  n_simulations = 200
)

# Count outcome ANCOVA
power_result <- power_analysis_ancova(
  n_control = 60,
  n_treatment = 60,
  outcome_type = "count",
  effect_size = 0.693,  # log rate ratio for RR = 2
  baseline_effect = 0.405,  # log rate ratio for RR = 1.5
  intercept_value = 1.099,  # log(3) for baseline rate = 3
  p_sig_success = 0.95,
  p_sig_futility = 0.7,
  n_simulations = 150
)

# ANCOVA with custom brms_args and parallel processing with progress
power_result_custom <- power_analysis_ancova(
  n_control = 50,
  n_treatment = 50,
  outcome_type = "continuous",
  effect_size = 0.5,
  baseline_effect = 0.2,
  threshold_success = 0.2,
  threshold_futility = 0,
  p_sig_success = 0.95,
  p_sig_futility = 0.5,
  n_simulations = 100,
  brms_args = list(algorithm = "meanfield", iter = 800),
  n_cores = 3,  # Use 3 cores for parallel processing
  progress_updates = 5  # Show 5 progress updates
)
}
}
