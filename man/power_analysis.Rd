% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class_power_analysis.R
\name{power_analysis}
\alias{power_analysis}
\title{Build Power Analysis Configuration}
\usage{
power_analysis(run = TRUE, ...)
}
\arguments{
\item{run}{Logical indicating whether to immediately execute the analysis
after creating the configuration object (default TRUE)}

\item{...}{Arguments passed to the rctbp_power_analysis constructor, including:
\itemize{
\item conditions: An rctbp_conditions object containing the experimental
conditions and design parameters for the power analysis
\item n_sims: Number of simulations to run per condition (default 100)
\item n_cores: Number of CPU cores to use for parallel execution (default 1).
Must not exceed the number of available cores
\item verbose: Logical indicating whether to display progress information
and analysis details (default TRUE)
\item brms_args: List of additional arguments to pass to \code{\link[brms:brm]{brms::brm()}}
function (default empty list)
\item design_prior: Prior specification for design parameters. Can be NULL
(no prior), a string with brms syntax, or a function for custom priors
}}
}
\value{
An S7 object of class "rctbp_power_analysis" containing:
\itemize{
\item All input parameters for simulation control
\item Access to design and model specifications via properties
\item Placeholder slots for results (filled after running analysis)
}
}
\description{
Creates a power analysis configuration object that specifies all parameters
needed to conduct Bayesian power analysis for randomized controlled trials.
This function creates an S7 object that serves as the main interface for
configuring and executing power analysis simulations.
}
\details{
This function validates input parameters and creates a configuration object
that can be executed using \code{\link[=run]{run()}}. The resulting object provides access
to design and model information through S7 properties:

\strong{Key Properties:}
\itemize{
\item \code{design}: Access to the experimental design configuration
\item \code{model}: Access to the underlying Bayesian model specification
\item \code{conditions}: The condition grid for analysis
}

\strong{Parallel Processing:}
When \code{n_cores > 1}, simulations are distributed across multiple cores
for improved performance. The function validates that \code{n_cores} does
not exceed available system cores.
}
\examples{
\dontrun{
# Create conditions for power analysis
conditions <- build_conditions(design, n_total = c(100, 200))

# Basic power analysis configuration
power_config <- build_power_analysis(conditions, n_sims = 100)

# Parallel execution with custom BRMS arguments
power_config <- build_power_analysis(
  conditions = conditions,
  n_sims = 1000,
  n_cores = 4,
  brms_args = list(chains = 4, iter = 2000)
)

# Execute the analysis
results <- run(power_config)
}
}
\seealso{
\code{\link[=build_conditions]{build_conditions()}}, \code{\link[=build_design]{build_design()}}, \code{\link[=build_model]{build_model()}}, \code{\link[=run]{run()}}
}
