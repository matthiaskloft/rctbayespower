% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/condition_handlers.R
\name{build_conditions}
\alias{build_conditions}
\title{Build Condition Grid for Power Analysis}
\usage{
build_conditions(design, condition_values, static_values)
}
\arguments{
\item{design}{An rctbayespower_design object that defines the study design}

\item{condition_values}{A named list where each element contains vectors of
parameter values to vary across conditions. All combinations will be created.}

\item{static_values}{A named list of parameter values that remain constant
across all conditions}
}
\value{
An rctbayespower_conditions object containing:
\item{conditions_grid}{A data.frame with all parameter combinations}
\item{condition_arguments}{A list of argument lists for each condition,
separated into simulation and interim analysis arguments}
\item{design}{The original rctbayespower_design object}
}
\description{
Creates a structured condition grid and argument lists for power analysis
simulations. This function takes varying condition parameters and static
parameters, validates them against the design requirements, and creates
all necessary argument combinations for simulation runs.
}
\details{
The function performs several validation steps:
\itemize{
\item Checks that condition_values and static_values don't have overlapping names
\item Validates that all required parameters are provided
\item Ensures p_alloc is properly specified as a list
\item Creates expanded grid of all condition combinations
}
}
\examples{
\dontrun{
# Create condition grid for sample size and effect size analysis
conditions <- build_conditions(
  design = my_design,
  condition_values = list(
    n_total = c(100, 200, 300),
    effect_size = c(0.2, 0.5, 0.8)
  ),
  static_values = list(
    p_alloc = list(c(0.5, 0.5)),
    baseline_effect = 0.1
  )
)

# Print the conditions
print(conditions)
}

}
